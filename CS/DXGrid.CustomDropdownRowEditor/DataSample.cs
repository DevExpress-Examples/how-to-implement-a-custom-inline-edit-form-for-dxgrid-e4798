// Developer Express Code Central Example:
// How to implement custom dropdown row editor for DXGrid
// 
// This example demonstrates how to edit grid row using the dropdown panel with
// editors generated automatically based on the underlying row data object. To see
// this approach in action, click the "Edit" hyperlink in the "#" grid column. To
// close dropdown panel click "Edit" again.
// This functionality is achieved by
// creating the attached behavior which generates the necessary DataRowTemplate for
// the grid row. The custom template can also be defined and assigned to the
// GridHelper.CustomTemplate property, so the custom template will be used instead
// the autogenerated template.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E4798

using System;
using System.Collections.Generic;
using System.ComponentModel;

namespace DXGrid.CustomDropdownRowEditor {
    public class DataSample : INotifyPropertyChanged/**/ {
        private bool _IsProcessed;
        private int _Amount;
        private DateTime _OrderDate;
        private string _Name;

        public string Name {
            get {
                return _Name;
            }
            set {
                _Name = value;
                NotifyPropertyChanged("Name");
            }
        }
        public DateTime OrderDate {
            get {
                return _OrderDate;
            }
            set {
                _OrderDate = value;
                NotifyPropertyChanged("OrderDate");
            }
        }
        public int Amount {
            get {
                return _Amount;
            }
            set {
                _Amount = value;
                NotifyPropertyChanged("Amount");
            }
        }
        public bool IsProcessed {
            get {
                return _IsProcessed;
            }
            set {
                _IsProcessed = value;
                NotifyPropertyChanged("IsProcessed");
            }
        }

        public static List<DataSample> GetData(int count) {
            Random rnd = new Random();
            List<DataSample> data = new List<DataSample>();
            for(int i = 0; i < count; i++) {
                DataSample ds = new DataSample();
                ds.Name = "Name-" + i;
                ds.OrderDate = new DateTime(2013, rnd.Next(1, 6), rnd.Next(1, 29));
                ds.Amount = rnd.Next(5, 10);
                ds.IsProcessed = rnd.Next(1, 3) == 1 ? true : false;
                data.Add(ds);
            }
            return data;
        }

        #region INotifyPropertyChanged Members

        void NotifyPropertyChanged(string propertyName) {
            if(PropertyChanged != null) {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }

        }
        public event PropertyChangedEventHandler PropertyChanged;

        #endregion
    }
}
